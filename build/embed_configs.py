#!/usr/bin/env python3
"""
Build script to embed configuration files into Python code
This converts YAML configs to Python constants for compilation
"""
import os
import yaml
import pprint

def build_embedded_configs():
    """Convert all YAML configs to a Python module"""
    
    config_dict = {}
    config_dir = 'configs'
    
    # Read all YAML files
    for yaml_file in sorted(os.listdir(config_dir)):
        if yaml_file.endswith('.yaml'):
            name = yaml_file.replace('.yaml', '')
            with open(os.path.join(config_dir, yaml_file), 'r') as f:
                config_dict[name] = yaml.safe_load(f)
            print(f"âœ“ Embedded config: {name}")
    
    # Write Python module
    output_path = 'src/embedded_configs.py'
    with open(output_path, 'w') as f:
        f.write('"""\n')
        f.write('Auto-generated embedded configurations\n')
        f.write('DO NOT EDIT - Generated by build/embed_configs.py\n')
        f.write('"""\n\n')
        f.write('# Embedded configuration dictionary\n')
        f.write('CONFIGS = ')
        pp = pprint.PrettyPrinter(indent=4, width=100)
        f.write(pp.pformat(config_dict))
        f.write('\n')
    
    print(f"\nâœ… Generated {output_path} with {len(config_dict)} configs")
    return len(config_dict)

if __name__ == "__main__":
    print("ðŸ”¨ Embedding configuration files...")
    count = build_embedded_configs()
    print(f"âœ… Successfully embedded {count} configuration files")